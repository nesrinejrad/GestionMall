<?php

namespace Proxies\__CG__\MyApp\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Boutiques extends \MyApp\UserBundle\Entity\Boutiques implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'id', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'nomBoutique', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'categorie', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'cartes', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'abonnees', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'descriptionBoutique', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'responsable'];
        }

        return ['__isInitialized__', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'id', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'nomBoutique', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'categorie', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'cartes', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'abonnees', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'descriptionBoutique', '' . "\0" . 'MyApp\\UserBundle\\Entity\\Boutiques' . "\0" . 'responsable'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Boutiques $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieBoutique($categorieBoutique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieBoutique', [$categorieBoutique]);

        return parent::setCategorieBoutique($categorieBoutique);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieBoutique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieBoutique', []);

        return parent::getCategorieBoutique();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionBoutique($descriptionBoutique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionBoutique', [$descriptionBoutique]);

        return parent::setDescriptionBoutique($descriptionBoutique);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionBoutique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionBoutique', []);

        return parent::getDescriptionBoutique();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponsable(\MyApp\UserBundle\Entity\User $responsable = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponsable', [$responsable]);

        return parent::setResponsable($responsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponsable', []);

        return parent::getResponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomBoutique($nomBoutique)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomBoutique', [$nomBoutique]);

        return parent::setNomBoutique($nomBoutique);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomBoutique()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomBoutique', []);

        return parent::getNomBoutique();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorie(\MyApp\UserBundle\Entity\Categorie $categorie = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorie', [$categorie]);

        return parent::setCategorie($categorie);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorie', []);

        return parent::getCategorie();
    }

    /**
     * {@inheritDoc}
     */
    public function addCarte(\MyApp\UserBundle\Entity\carteFidelites $carte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCarte', [$carte]);

        return parent::addCarte($carte);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCarte(\MyApp\UserBundle\Entity\carteFidelites $carte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCarte', [$carte]);

        return parent::removeCarte($carte);
    }

    /**
     * {@inheritDoc}
     */
    public function getCartes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCartes', []);

        return parent::getCartes();
    }

    /**
     * {@inheritDoc}
     */
    public function addAbonnee(\MyApp\UserBundle\Entity\abonnement $abonnee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAbonnee', [$abonnee]);

        return parent::addAbonnee($abonnee);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAbonnee(\MyApp\UserBundle\Entity\abonnement $abonnee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAbonnee', [$abonnee]);

        return parent::removeAbonnee($abonnee);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbonnees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbonnees', []);

        return parent::getAbonnees();
    }

}
